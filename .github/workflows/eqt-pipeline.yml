name: EQT Pipeline Automation
on:
  issues:
    types: [opened, labeled, closed, reopened, assigned]
  pull_request:
    types: [opened, synchronize, closed, review_requested]
  workflow_dispatch:

jobs:
  automate-status:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 自动设置新Issue到🌱新芽
      uses: actions/github-script@v7
      if: github.event.action == 'opened' && github.event.issue.pull_request == null
      with:
        script: |
          await github.rest.projects.createCard({
            column_id: "${{ secrets.SEED_OPTION_ID }}",
            content_type: "Issue",
            content_id: context.issue.id
          });
          await github.rest.issues.update({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['🌱-seed']
          });
          await github.rest.issues.update({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🎯 EQT研究流程\n\n**当前阶段**: 🌱 新芽\n**优先级**: [请选择]\n**领域**: [请选择]\n**AI需求**: \n**预测**: \n**专家**: \n\n---\n*由 EQT Pipeline 自动创建*`
          });

    - name: 🔍标签移动到论证中
      uses: actions/github-script@v7
      if: contains(github.event.issue.labels.*.name, '🔍') || contains(github.event.label.name, '🔍')
      with:
        script: |
          await github.rest.projects.updateCard({
            card_id: "${{ secrets.EXPLORING_CARD_ID }}", // 需要动态获取
            column_id: "${{ secrets.EXPLORING_COLUMN_ID }}"
          });
          await github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['🔍-exploring']
          });

    - name: 🧪验证中 - 链接数据仓库
      uses: actions/github-script@v7
      if: contains(github.event.issue.body, 'EQT-Data') || contains(github.event.label.name, '🧪')
      with:
        script: |
          // 移动到验证列
          await github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['🧪-validating']
          });

    - name: PR合并 → 🎯核心整合
      if: github.event.pull_request.merged == true
      uses: actions/github-script@v7
      with:
        script: |
          const issueNumber = context.payload.pull_request.head.ref.match(/issue-(\d+)/)?.[1];
          if (issueNumber) {
            await github.rest.issues.update({
              issue_number: parseInt(issueNumber),
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              labels: ['🎯-integrated']
            });
          }

  ai-bot-integration:
    runs-on: ubuntu-latest
    steps:
    - name: 检测AI需求并通知Bot
      uses: actions/github-script@v7
      if: contains(github.event.issue.body, '@EQT-AI-Bot')
      env:
        AI_BOT_WEBHOOK: ${{ secrets.AI_BOT_WEBHOOK }}
      with:
        script: |
          const aiDemand = context.payload.issue.body.match(/@EQT-AI-Bot\s*(.+)/)?.[1];
          if (aiDemand) {
            await fetch(process.env.AI_BOT_WEBHOOK, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                issue: context.issue,
                command: aiDemand,
                action: 'analyze'
              })
            });
          }
