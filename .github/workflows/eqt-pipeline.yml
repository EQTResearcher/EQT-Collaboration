name: EQT Pipeline Automation (Final)

on:
  issues:
    types: [opened]
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  automate-status:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "🌱 新 Issue 自动添加到项目并设为新芽"
        if: github.event_name == 'issues' && github.event.action == 'opened'
        uses: actions/github-script@v7
        env:
          GH_PAT: ${{ secrets.GH_PROJECT_PAT }}
          EQT_PROJECT_NODE_ID: ${{ secrets.EQT_PROJECT_NODE_ID }}
          STATUS_FIELD_ID: ${{ secrets.STATUS_FIELD_ID }}
          SEED_OPTION_ID: ${{ secrets.SEED_OPTION_ID }}
        with:
          github-token: ${{ secrets.GH_PROJECT_PAT }}
          script: |
            try {
              const projectId = process.env.EQT_PROJECT_NODE_ID.trim();
              const fieldId = process.env.STATUS_FIELD_ID.trim();
              const optionId = process.env.SEED_OPTION_ID.trim();
              const issueNodeId = context.payload.issue.node_id;

              core.info(`✅ projectId=${projectId}`);
              core.info(`✅ fieldId=${fieldId}`);
              core.info(`✅ optionId=${optionId}`);

              // 1️⃣ 把 Issue 添加到 Project
              const addMutation = `
              mutation {
                addProjectV2ItemById(input: {
                  projectId: "${projectId}",
                  contentId: "${issueNodeId}"
                }) {
                  item { id }
                }
              }`;

              // 发出 GraphQL 请求
              const addResult = await github.graphql(addMutation);
              const itemId = addResult.addProjectV2ItemById.item.id;
              core.info(`✅ 已添加到项目 itemId=${itemId}`);

              // 2️⃣ 更新状态字段为“🌱 新芽”
              const updateMutation = `
              mutation {
                updateProjectV2ItemFieldValue(input: {
                  projectId: "${projectId}",
                  itemId: "${itemId}",
                  fieldId: "${fieldId}",
                  value: { singleSelectOptionId: "${optionId}" }
                }) {
                  projectV2Item { id }
                }
              }`;
              
              // 3️⃣ 添加标签
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["🌱-seed"]
              });
              core.info("✅ 已添加标签 🌱-seed");

              await github.graphql(updateMutation);
              core.info("✅ 已更新状态字段为 🌱 新芽");

              // 打印请求结果
              core.info(`✅ Add Result: ${JSON.stringify(addResult)}`);

            } catch (error) {
              core.setFailed(`❌ 出错啦: ${error.message}`);
              if (error.errors) {
                core.error(JSON.stringify(error.errors, null, 2));
              }
            }
