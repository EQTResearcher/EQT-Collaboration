name: EQT Pipeline Automation (Final)

on:
  issues:
    types: [opened]
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  automate-status:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "üå± Êñ∞ Issue Ëá™Âä®Ê∑ªÂä†Âà∞È°πÁõÆÂπ∂ËÆæ‰∏∫Êñ∞ËäΩ"
        if: github.event_name == 'issues' && github.event.action == 'opened'
        uses: actions/github-script@v7
        env:
          GH_PAT: ${{ secrets.GH_PROJECT_PAT }}
          EQT_PROJECT_NODE_ID: ${{ secrets.EQT_PROJECT_NODE_ID }}
          STATUS_FIELD_ID: ${{ secrets.STATUS_FIELD_ID }}
          SEED_OPTION_ID: ${{ secrets.SEED_OPTION_ID }}
        with:
          github-token: ${{ secrets.GH_PROJECT_PAT }}
          script: |
            try {
              const projectId = process.env.EQT_PROJECT_NODE_ID.trim();
              const fieldId = process.env.STATUS_FIELD_ID.trim();
              const optionId = process.env.SEED_OPTION_ID.trim();
              const issueNodeId = context.payload.issue.node_id;

              core.info(`‚úÖ projectId=${projectId}`);
              core.info(`‚úÖ fieldId=${fieldId}`);
              core.info(`‚úÖ optionId=${optionId}`);

              // 1Ô∏è‚É£ Êää Issue Ê∑ªÂä†Âà∞ Project
              const addMutation = `
              mutation {
                addProjectV2ItemById(input: {
                  projectId: "${projectId}",
                  contentId: "${issueNodeId}"
                }) {
                  item { id }
                }
              }`;
