   name: EQT Kanban Advanced Automation
   
   on:
     issues:
       types: [opened, labeled, unlabeled, closed, reopened]
     pull_request:
       types: [opened, closed, reopened, ready_for_review]
     project_card:
       types: [created, moved, deleted]
   
   jobs:
     sync-status:
       runs-on: ubuntu-latest
       steps:
         - name: Sync labels to status
           uses: actions/github-script@v6
           with:
             script: |
               const { issue, project } = context.payload;
               
               // 获取项目ID
               const projects = await github.rest.projects.listForRepo({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
               });
               
               const targetProject = projects.data.find(p => p.name === "EQT Collective Intelligence Pipeline");
               if (!targetProject) return;
               
               // 标签到状态的映射
               const labelToStatus = {
                 'exploring': '🔍 论证中 (Exploring)',
                 'reviewing': '🤝 社区评审 (Reviewing)', 
                 'consensus': '✅ 初步共识 (Consensus)',
                 'integration': '🎯 核心整合 (Integration)'
               };
               
               // 更新项目项状态
               if (issue) {
                 const projectItems = await github.rest.projects.listCards({
                   project_id: targetProject.id,
                   archived_state: 'not_archived'
                 });
                 
                 const item = projectItems.data.find(card => 
                   card.content_url && card.content_url.includes(`/issues/${issue.number}`)
                 );
                 
                 if (item) {
                   for (const [label, status] of Object.entries(labelToStatus)) {
                     if (issue.labels.some(l => l.name.toLowerCase().includes(label))) {
                       await github.rest.projects.updateCard({
                         card_id: item.id,
                         archived: false,
                         // 这里需要根据实际API调整状态更新逻辑
                       });
                       break;
                     }
                   }
                 }
               }
   
     ai-bot-trigger:
       runs-on: ubuntu-latest
       if: contains(github.event.issue.labels.*.name, '🌱 seed')
       steps:
         - name: Trigger AI Bot analysis
           run: |
             echo "新种子议题 #${{ github.event.issue.number }} 需要AI分析"
             # 这里可以调用你的AI bot API
             # curl -X POST https://your-ai-bot.com/analyze \
             #   -d '{"issue": ${{ toJson(github.event.issue) }}}'
